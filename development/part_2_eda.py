# -*- coding: utf-8 -*-
"""Part 2 - EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18OnDORGAHC0f2Y33d6SfVg_fIljUtc0z
"""

# check again vif
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from statsmodels.stats.outliers_influence import variance_inflation_factor

removed2=[]
max_vif = thresh = 10
while max_vif >= thresh:
  max_vif = max([variance_inflation_factor(x_copy, i) for i in range(x_copy.shape[1])])
  for i in range(x_copy.shape[1]):
    if variance_inflation_factor(x_copy, i) > thresh:
      removed2.append(x_copy.columns[i])
      print(x_copy.columns[i], variance_inflation_factor(x_copy, i))
      x_copy.drop(x_copy.columns[i], axis=1, inplace=True)
      break

# Calculate VIF
vif = pd.DataFrame()
vif["Variable"] = x_copy.columns
vif["VIF"] = [variance_inflation_factor(x_copy, i) for i in range(x_copy.shape[1])]
print(vif)

print(removed1)
print(removed2)

"""## Outliers"""

# code along
df.boxplot(column=['outliers 1']);

# code along
df.describe()

# code along
df.boxplot(column=['outliers 1']);

# code along
df.describe()

# Assuming you want to store information about the 'outliers 1' column
# Calculate outliers based on IQR (Interquartile Range)
Q1 = df['outliers 1'].quantile(0.25)
Q3 = df['outliers 1'].quantile(0.75)
IQR = Q3 - Q1
outliers = df[(df['outliers 1'] < (Q1 - 1.5 * IQR)) | (df['outliers 1'] > (Q3 + 1.5 * IQR))]

# Create a variable to pickle
data = {'outliers': outliers}

# Pickle the variable and save it to a file
with open('outliers.pkl', 'wb') as f:
    pickle.dump(data, f)

# code along
df.info()